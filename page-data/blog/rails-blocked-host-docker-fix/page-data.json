{"componentChunkName":"component---src-templates-post-js","path":"/blog/rails-blocked-host-docker-fix/","result":{"data":{"markdownRemark":{"html":"<p class=\"markdown-para\">This post will demonstrate how to solve the Rails Blocked Host error when running a Rails app in a Docker container.</p>\n<p class=\"markdown-para\">But first, what is the blocked host error? The symptom is the following error message is returned when making any request to the server. For example: <code>https://myapp.com</code> would return a 500 error with details:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"html\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">h1</span><span class=\"mtk1\">&gt;Blocked host: myapp.com&lt;/</span><span class=\"mtk7\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">h2</span><span class=\"mtk1\">&gt;To allow requests to myapp.com, add the following to your environment configuration:&lt;/</span><span class=\"mtk7\">h2</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">pre</span><span class=\"mtk1\">&gt;config.hosts </span><span class=\"mtk8\">&lt;&lt;</span><span class=\"mtk1\"> &quot;myapp.com&quot;&lt;/</span><span class=\"mtk7\">pre</span><span class=\"mtk1\">&gt;</span></span></span></code></pre>\n<p class=\"markdown-para\">This happens because as of v6, Rails has introduced a new <code>ActionDispatch::HostAuthorization</code> middleware to prevent <a href=\"https://danielmiessler.com/blog/dns-rebinding-explained/\" class=\"markdown-link\">DNS rebinding attacks</a>. This middleware is controlled by a new <code>hosts</code> configuration to specify what hosts the server will respond to. Here is the default configuration for development, i.e. when <code>RAILS_ENV=development</code>:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># config/environments/development.rb</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">Rails</span><span class=\"mtk1\">.</span><span class=\"mtk5\">application</span><span class=\"mtk1\">.</span><span class=\"mtk5\">configure</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  config.</span><span class=\"mtk5\">hosts</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;0.0.0.0/0&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk3\"># All IPv4 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;::/0&quot;</span><span class=\"mtk1\">),      </span><span class=\"mtk3\"># All IPv6 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;localhost&quot;</span><span class=\"mtk1\">              </span><span class=\"mtk3\"># The localhost reserved domain.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># other config settings...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">This means that when running a Rails server (assume default port 3000) in development mode on your laptop, you could address it as <code>http://localhost:3000</code> or <code>http://127.0.0.1:3000</code> or even by your internal IP address such as <code>http://193.168.1.2:3000</code>.</p>\n<p class=\"markdown-para\">In production, if your app should be available at <code>https://myapp.com</code>, then the hosts could be configured as:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># config/environments/production.rb</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">Rails</span><span class=\"mtk1\">.</span><span class=\"mtk5\">application</span><span class=\"mtk1\">.</span><span class=\"mtk5\">configure</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  config.</span><span class=\"mtk5\">hosts</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;myapp.com&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># other config settings...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">In this case, the Rails server would respond to any requests from <code>https://myapp.com</code>, but not from an IP address such as <code>https://145.83.11.7</code>.</p>\n<h2 class=\"markdown-subtitle\" id=\"docker-and-docker-compose\" style=\"position:relative;\"><a href=\"#docker-and-docker-compose\" aria-label=\"docker and docker compose permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker and Docker Compose</h2>\n<p class=\"markdown-para\">But what happens if you're running microservices, with several Rails apps each running in their own container, that need to make requests to each other?</p>\n<p class=\"markdown-para\">Here's the setup: Suppose there is an app called <code>mainapp</code>, and it uses a microservice that provides subscription management services called <code>subscription_service</code>. The <code>mainapp</code> developers don't want to have to checkout and install the code for <code>subscription_service</code> so docker compose is used to ensure all services can be started from the main app.</p>\n<p class=\"markdown-para\">Here's a simplified docker-compose file showing only the main app and subscription services. <code>mainapp</code> has all the <code>app</code> code available to it via a host mount because this is the main app under development. <code>subscription_service</code> uses a private image from the <a href=\"https://github.blog/2020-09-01-introducing-github-container-registry/\" class=\"markdown-link\">Github Container Registry</a> because that is an already built microservice that <code>mainapp</code> depends on.</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"yml\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># docker-compose.yml (mainapp)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">version</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;3.3&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">services</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">mainapp</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">build</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">context</span><span class=\"mtk1\">: </span><span class=\"mtk4\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">command</span><span class=\"mtk1\">: </span><span class=\"mtk6\">bash -c &quot;bundle exec rails s -b &#39;0.0.0.0&#39;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">volumes</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">.:/app</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">ports</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">&quot;3000:3000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">subscription_service</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">image</span><span class=\"mtk1\">: </span><span class=\"mtk6\">ghcr.io/my_org/subscription_service/subscription-app:latest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">command</span><span class=\"mtk1\">: </span><span class=\"mtk6\">bash -c &quot;bundle exec rails s -b &#39;0.0.0.0&#39; -p 4000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">ports</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">&quot;4000:4000&quot;</span></span></span></code></pre>\n<p class=\"markdown-para\">Since both <code>mainapp</code> and <code>subscription_service</code> are started in the same docker network created when <code>docker-compose up</code> is run, it should be possible for the main app to make http requests to the subscription service. For example, the subscription service exposes a REST style API to retrieve all plans, with <code>GET {{host}}/api/v1/plans</code>. Therefore, the following code in <code>mainapp</code>, using Faraday to make an http request <em class=\"markdown-emphasis\">should</em> work:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># Any ruby file in mainapp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">url </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk6\">&#39;http://subscription_service:4000/api/v1/plans&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">response </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> </span><span class=\"mtk9 mtki\">Faraday</span><span class=\"mtk1\">.</span><span class=\"mtk5\">get</span><span class=\"mtk1\">(url, </span><span class=\"mtk4\">nil</span><span class=\"mtk1\">, {</span><span class=\"mtk6\">&#39;Accept&#39;</span><span class=\"mtk1\"> =&gt; </span><span class=\"mtk6\">&#39;application/json&#39;</span><span class=\"mtk1\">})</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># expect response.status to be 200 and response.body to contain list of plans</span></span></span></code></pre>\n<p class=\"markdown-para\">But rather than the expected 200 response and a list of plans, a 500 error is returned with the following details:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"html\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">h1</span><span class=\"mtk1\">&gt;Blocked host: subscription_service&lt;/</span><span class=\"mtk7\">h1</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">h2</span><span class=\"mtk1\">&gt;To allow requests to subscription_service, add the following to your environment configuration:&lt;/</span><span class=\"mtk7\">h2</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">pre</span><span class=\"mtk1\">&gt;config.hosts </span><span class=\"mtk8\">&lt;&lt;</span><span class=\"mtk1\"> &quot;subscription_service&quot;&lt;/</span><span class=\"mtk7\">pre</span><span class=\"mtk1\">&gt;</span></span></span></code></pre>\n<p class=\"markdown-para\">The problem is <code>subscription_service</code> is a Rails 6 app, with the default <code>config.hosts</code> specified in <code>config/environments/development.rb</code>. This means it only responds to requests at <code>http://localhost:4000</code> or an IP address. But <code>mainapp</code> is attempting to call <code>http://subscription_service:4000</code> which has not been allowed.</p>\n<h2 class=\"markdown-subtitle\" id=\"solution\" style=\"position:relative;\"><a href=\"#solution\" aria-label=\"solution permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution</h2>\n<p class=\"markdown-para\">The solution is to modify the development configuration in the subscription microservice to allow a host of <code>subscription_service</code>. This is the service name that is specified in the main app's <code>docker-compose.yml</code> file. The modified config looks like this:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># config/environments/development.rb in Subscription service project</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">Rails</span><span class=\"mtk1\">.</span><span class=\"mtk5\">application</span><span class=\"mtk1\">.</span><span class=\"mtk5\">configure</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  config.</span><span class=\"mtk5\">hosts</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;0.0.0.0/0&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk3\"># All IPv4 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;::/0&quot;</span><span class=\"mtk1\">),      </span><span class=\"mtk3\"># All IPv6 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;localhost&quot;</span><span class=\"mtk1\">,             </span><span class=\"mtk3\"># The localhost reserved domain.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;subscription_service&quot;</span><span class=\"mtk1\">   </span><span class=\"mtk3\"># Allow this to be addressed when running in containers via docker-compose.yml.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># other config settings...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">One problem with this solution is it requires that every project that wants to use the subscription microservice to name it <code>subscription_service</code> in their <code>docker-compose.yml</code>. An alternate way to solve this problem while providing more flexibility would be to use an environment variable as follows:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># config/environments/development.rb in Subscription service project</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">Rails</span><span class=\"mtk1\">.</span><span class=\"mtk5\">application</span><span class=\"mtk1\">.</span><span class=\"mtk5\">configure</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  config.</span><span class=\"mtk5\">hosts</span><span class=\"mtk1\"> </span><span class=\"mtk7\">=</span><span class=\"mtk1\"> [</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;0.0.0.0/0&quot;</span><span class=\"mtk1\">), </span><span class=\"mtk3\"># All IPv4 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">IPAddr</span><span class=\"mtk1\">.</span><span class=\"mtk7\">new</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&quot;::/0&quot;</span><span class=\"mtk1\">),      </span><span class=\"mtk3\"># All IPv6 addresses.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;localhost&quot;</span><span class=\"mtk1\">,             </span><span class=\"mtk3\"># The localhost reserved domain.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    ENV[</span><span class=\"mtk6\">&quot;SERVER_HOST_NAME&quot;</span><span class=\"mtk1\">]  </span><span class=\"mtk3\"># Allow this to be addressed when running in containers via docker-compose.yml.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  ]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3\"># other config settings...</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">Now suppose a project that wishes to use the subscription microservice would like to refer to it as <code>subs</code>, for example <code>GET http://subs:4000/api/v1/plans</code>. Then they could do so by specifying <code>subs</code> as the value for <code>SERVER_HOST_NAME</code> in the <code>environment</code> section of the subscription service in the docker compose file as follows:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"yml\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># docker-compose.yml (mainapp)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">version</span><span class=\"mtk1\">: </span><span class=\"mtk6\">&quot;3.3&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">services</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">mainapp</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">build</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">context</span><span class=\"mtk1\">: </span><span class=\"mtk4\">.</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">command</span><span class=\"mtk1\">: </span><span class=\"mtk6\">bash -c &quot;bundle exec rails s -b &#39;0.0.0.0&#39;&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">volumes</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">.:/app</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">ports</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">&quot;3000:3000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">subs</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">image</span><span class=\"mtk1\">: </span><span class=\"mtk6\">ghcr.io/my_org/subscription_service/subscription-app:latest</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">command</span><span class=\"mtk1\">: </span><span class=\"mtk6\">bash -c &quot;bundle exec rails s -b &#39;0.0.0.0&#39; -p 4000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">ports</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      - </span><span class=\"mtk6\">&quot;4000:4000&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">environment</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk7\">SERVER_HOST_NAME</span><span class=\"mtk1\">: </span><span class=\"mtk6\">subs</span></span></span></code></pre>\n<h2 class=\"markdown-subtitle\" id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p class=\"markdown-para\">This post has covered what the Rails Blocked Host error is and several different ways to solve it for development and production. See the Rails docs on <a href=\"https://guides.rubyonrails.org/configuring.html#configuring-middleware\" class=\"markdown-link\">configuring middleware</a> to learn more about <code>ActionDispatch::HostAuthorization</code> middleware.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk8 { color: #F8F8F0; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","timeToRead":4,"tableOfContents":"<ul>\n<li><a href=\"#docker-and-docker-compose\">Docker and Docker Compose</a></li>\n<li><a href=\"#solution\">Solution</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n</ul>","frontmatter":{"title":"Fix Rails Blocked Host Error with Docker","date":"10 Sep 2021","description":"Learn how to fix the Rails Blocked Host error when using Docker.","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/648daf1a5b7bca42ff3729828586b2dc/fc2d4/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg","srcSet":"/static/648daf1a5b7bca42ff3729828586b2dc/b834a/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg 225w,\n/static/648daf1a5b7bca42ff3729828586b2dc/21c52/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg 450w,\n/static/648daf1a5b7bca42ff3729828586b2dc/fc2d4/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/648daf1a5b7bca42ff3729828586b2dc/71a10/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.webp 225w,\n/static/648daf1a5b7bca42ff3729828586b2dc/901f1/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.webp 450w,\n/static/648daf1a5b7bca42ff3729828586b2dc/4ffff/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":600}}}},"fields":{"slug":"/blog/rails-blocked-host-docker-fix/"}},"relatedP":{"edges":[{"node":{"id":"d300ca38-a569-5f95-b2a5-0bf6c30486cc","frontmatter":{"title":"Use UUID for primary key with Rails and Postgres","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/30bb7a61cc87a3edc43f8af6d89fa013/26528/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg","srcSet":"/static/30bb7a61cc87a3edc43f8af6d89fa013/26528/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg 300w,\n/static/30bb7a61cc87a3edc43f8af6d89fa013/43429/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/30bb7a61cc87a3edc43f8af6d89fa013/5d6c3/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.webp 300w,\n/static/30bb7a61cc87a3edc43f8af6d89fa013/68dbc/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/rails-uuid-primary-key-postgres/"}}},{"node":{"id":"46775b70-43f2-584d-8c65-327ac46ebbd7","frontmatter":{"title":"Dockerize a Rails Application for Development","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#d8c8d8","images":{"fallback":{"src":"/static/3281f20a27a3ba24dcc1ca78c639c25d/26528/docker-rails-shipping-containers.jpg","srcSet":"/static/3281f20a27a3ba24dcc1ca78c639c25d/26528/docker-rails-shipping-containers.jpg 300w,\n/static/3281f20a27a3ba24dcc1ca78c639c25d/43429/docker-rails-shipping-containers.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/3281f20a27a3ba24dcc1ca78c639c25d/5d6c3/docker-rails-shipping-containers.webp 300w,\n/static/3281f20a27a3ba24dcc1ca78c639c25d/68dbc/docker-rails-shipping-containers.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/dockerize-rails-app-for-dev-debug-and-testing/"}}},{"node":{"id":"5ba80c73-7881-5889-aea7-fa52e614285f","frontmatter":{"title":"Roll Your Own Search with Rails and Postgres: Search API","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/ecacb98b5280820da4e1504d9c745ee9/26528/roll-search-4.jpg","srcSet":"/static/ecacb98b5280820da4e1504d9c745ee9/26528/roll-search-4.jpg 300w,\n/static/ecacb98b5280820da4e1504d9c745ee9/43429/roll-search-4.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/ecacb98b5280820da4e1504d9c745ee9/5d6c3/roll-search-4.webp 300w,\n/static/ecacb98b5280820da4e1504d9c745ee9/68dbc/roll-search-4.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/roll-your-own-search-service-for-gatsby-part4/"}}}]}},"pageContext":{"slug":"/blog/rails-blocked-host-docker-fix/","relatedPosts":["Dockerize a Rails Application for Development","Roll Your Own Search with Rails and Postgres: Search API","Use UUID for primary key with Rails and Postgres"]}},"staticQueryHashes":["163244226"],"slicesMap":{}}