{"componentChunkName":"component---src-templates-post-js","path":"/blog/start-rails-6-project-with-rspec/","result":{"data":{"markdownRemark":{"html":"<p class=\"markdown-para\">Currently at work I have one of those rare opportunities to greenfield new project. Since we're a Rails shop, naturally I'm using Rails, and since it's a new project, might as well use the latest and greatest, which at the time of this writing is Rails 6.</p>\n<p class=\"markdown-para\">However I ran into a little surprise when it came to testing. Being somewhat of a Rails noob, based on the handful of projects I've worked on so far, had assumed that RSpec was the default test framework that comes with Rails. But it turns out, this is not the case. There's a few additional steps needed to setup a Rails project to use RSpec. This post will walk you through the steps I took to scaffold a new Rails 6 project and set it up for testing with RSpec.</p>\n<h2 class=\"markdown-subtitle\" id=\"project-scaffolding\" style=\"position:relative;\"><a href=\"#project-scaffolding\" aria-label=\"project scaffolding permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Project Scaffolding</h2>\n<p class=\"markdown-para\">Run the following commands to get the project started. I'm using Ruby 2.7.1 and will be using Postgres as the database.</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"bash\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">gem install rails -v 6.0.3.4 </span><span class=\"mtk3\"># the most recent version at the time of this writing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">brew install postgresql</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rails new myapp -d=postgresql</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9\">cd</span><span class=\"mtk1\"> myapp</span></span></span></code></pre>\n<p class=\"markdown-para\">My next step was to generate some models. Since this will be a multi tenant system, first model is the Tenant class.</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"bash\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rails generate model Tenant name:string</span></span></span></code></pre>\n<p class=\"markdown-para\">The output of this command is:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Running via Spring preloader in process 19406</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  invoke  active_record</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create    db/migrate/20201018145546_create_tenants.rb</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create    app/models/tenant.rb</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  invoke    test_unit</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create      test/models/tenant_test.rb</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create      test/fixtures/tenants.yml</span></span></code></pre>\n<p class=\"markdown-para\">Notice it didn't generate an RSpec test. It turns out, the default testing library that comes with Rails is Minitest and the generator creates a Minitest test file and fixture. Here's what's needed to switch to RSpec.</p>\n<h2 class=\"markdown-subtitle\" id=\"add-rspec\" style=\"position:relative;\"><a href=\"#add-rspec\" aria-label=\"add rspec permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add RSpec</h2>\n<p class=\"markdown-para\">First start by adding the RSpec gem to the test section of the Gemfile. Actually the <a href=\"https://relishapp.com/rspec/rspec-rails/v/4-0/docs\" class=\"markdown-link\">rspec-rails</a> gem is used which adds RSpec support to Rails:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">group </span><span class=\"mtk4\">:test</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  gem </span><span class=\"mtk6\">&#39;rspec-rails&#39;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">Then install and bootstrap it. This will generate the <code>spec</code> dir and some support files:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"bash\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">bundle install</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rails generate rspec:install</span></span></span></code></pre>\n<h2 class=\"markdown-subtitle\" id=\"configure-rspec\" style=\"position:relative;\"><a href=\"#configure-rspec\" aria-label=\"configure rspec permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure RSpec</h2>\n<p class=\"markdown-para\">You would think at this point, you could run the model generator and this time an RSpec test would get generated. But in my experience, it still generated the Minitest test and fixture. One more change you need to make is to tell the Rails generator that you only want RSpec tests. This configuration is specified in the <code>config/initializers/generators.rb</code> file. Go ahead and create this file if it's not already there. Then add the following:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk9 mtki\">Rails</span><span class=\"mtk1\">.</span><span class=\"mtk5\">application</span><span class=\"mtk1\">.</span><span class=\"mtk5\">config</span><span class=\"mtk1\">.</span><span class=\"mtk5\">generators</span><span class=\"mtk1\"> </span><span class=\"mtk7\">do</span><span class=\"mtk1\"> |g|</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  g.</span><span class=\"mtk5\">test_framework</span><span class=\"mtk1\"> </span><span class=\"mtk4\">:rspec</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">Now the model generator will generate an RSpec test file:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"bash\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rails generate model Tenant name:string</span></span></span></code></pre>\n<p class=\"markdown-para\">Command output:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\">Running via Spring preloader in process 21305</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  invoke  active_record</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create    db/migrate/20201018150823_create_tenants.rb</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create    app/models/tenant.rb</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  invoke    rspec</span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\">  create      spec/models/tenant_spec.rb</span></span></code></pre>\n<h2 class=\"markdown-subtitle\" id=\"cleanup\" style=\"position:relative;\"><a href=\"#cleanup\" aria-label=\"cleanup permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cleanup</h2>\n<p class=\"markdown-para\">Final step is to remove the generated <code>test</code> dir to avoid confusion. RSpec uses the <code>spec</code> dir for all test and support files.</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"bash\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">rm -rf </span><span class=\"mtk9\">test</span></span></span></code></pre>\n<p class=\"markdown-para\">That's it, now you're setup for RSpec testing, happy coding!</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","timeToRead":2,"tableOfContents":"<ul>\n<li><a href=\"#project-scaffolding\">Project Scaffolding</a></li>\n<li><a href=\"#add-rspec\">Add RSpec</a></li>\n<li><a href=\"#configure-rspec\">Configure RSpec</a></li>\n<li><a href=\"#cleanup\">Cleanup</a></li>\n</ul>","frontmatter":{"title":"Start a Rails 6 Project with RSpec","date":"18 Oct 2020","description":"Learn how to start a new Rails 6 project with RSpec as the default testing library.","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#283848","images":{"fallback":{"src":"/static/36121c07924fc545e6336936bc7765a0/fc2d4/scaffold-rails-jack-b-S3SU988T13A-unsplash.jpg","srcSet":"/static/36121c07924fc545e6336936bc7765a0/b834a/scaffold-rails-jack-b-S3SU988T13A-unsplash.jpg 225w,\n/static/36121c07924fc545e6336936bc7765a0/21c52/scaffold-rails-jack-b-S3SU988T13A-unsplash.jpg 450w,\n/static/36121c07924fc545e6336936bc7765a0/fc2d4/scaffold-rails-jack-b-S3SU988T13A-unsplash.jpg 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/36121c07924fc545e6336936bc7765a0/71a10/scaffold-rails-jack-b-S3SU988T13A-unsplash.webp 225w,\n/static/36121c07924fc545e6336936bc7765a0/901f1/scaffold-rails-jack-b-S3SU988T13A-unsplash.webp 450w,\n/static/36121c07924fc545e6336936bc7765a0/4ffff/scaffold-rails-jack-b-S3SU988T13A-unsplash.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":600}}}},"fields":{"slug":"/blog/start-rails-6-project-with-rspec/"}},"relatedP":{"edges":[{"node":{"id":"c92d7f13-ff75-5632-be8c-e9b5ff992ddc","frontmatter":{"title":"Rails Feature Test Solved by Regex","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#487898","images":{"fallback":{"src":"/static/4b2924a3726801417360b49f81f7747b/26528/rails-feature-test-regex-patrick-tomasso-QMDap1TAu0g-unsplash.jpg","srcSet":"/static/4b2924a3726801417360b49f81f7747b/26528/rails-feature-test-regex-patrick-tomasso-QMDap1TAu0g-unsplash.jpg 300w,\n/static/4b2924a3726801417360b49f81f7747b/43429/rails-feature-test-regex-patrick-tomasso-QMDap1TAu0g-unsplash.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/4b2924a3726801417360b49f81f7747b/5d6c3/rails-feature-test-regex-patrick-tomasso-QMDap1TAu0g-unsplash.webp 300w,\n/static/4b2924a3726801417360b49f81f7747b/68dbc/rails-feature-test-regex-patrick-tomasso-QMDap1TAu0g-unsplash.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/rails-feature-test-solved-regex/"}}},{"node":{"id":"df308377-3f0e-5aae-8cce-4e9377304daa","frontmatter":{"title":"Solving a Python Interview Question in Ruby","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#080808","images":{"fallback":{"src":"/static/41cac534f5048f26531ee516516637b1/26528/python-interview-question.jpg","srcSet":"/static/41cac534f5048f26531ee516516637b1/26528/python-interview-question.jpg 300w,\n/static/41cac534f5048f26531ee516516637b1/43429/python-interview-question.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/41cac534f5048f26531ee516516637b1/5d6c3/python-interview-question.webp 300w,\n/static/41cac534f5048f26531ee516516637b1/68dbc/python-interview-question.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/python-interview-question-in-ruby/"}}},{"node":{"id":"334ba24b-01a2-58f3-9962-67e64296c56e","frontmatter":{"title":"Testing Faraday with RSpec","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/static/69f6b56407e655dd690ba4b363161733/26528/faraday-alex-kondratiev-H9t723yPjYI-unsplash.jpg","srcSet":"/static/69f6b56407e655dd690ba4b363161733/26528/faraday-alex-kondratiev-H9t723yPjYI-unsplash.jpg 300w,\n/static/69f6b56407e655dd690ba4b363161733/43429/faraday-alex-kondratiev-H9t723yPjYI-unsplash.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/69f6b56407e655dd690ba4b363161733/5d6c3/faraday-alex-kondratiev-H9t723yPjYI-unsplash.webp 300w,\n/static/69f6b56407e655dd690ba4b363161733/68dbc/faraday-alex-kondratiev-H9t723yPjYI-unsplash.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/testing-faraday-with-rspec/"}}}]}},"pageContext":{"slug":"/blog/start-rails-6-project-with-rspec/","relatedPosts":["Solving a Python Interview Question in Ruby","Testing Faraday with RSpec","Rails Feature Test Solved by Regex"]}},"staticQueryHashes":["163244226"],"slicesMap":{}}