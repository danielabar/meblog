{"componentChunkName":"component---src-templates-post-js","path":"/blog/rails-strong-params-get/","result":{"data":{"markdownRemark":{"html":"<p class=\"markdown-para\">If you've been using Rails for a while, you've probably encountered <a href=\"https://api.rubyonrails.org/v6.1.3/classes/ActionController/StrongParameters.html\" class=\"markdown-link\">Strong Parameters</a>. This feature was introduced in Rails 4 and is intended to prevent mass assignment. The typical use case for this is to protect a POST or PUT/PATCH endpoint, which is invoked when a user submits a form and a controller action tries to create or update the corresponding model.</p>\n<p class=\"markdown-para\">This post will demonstrate how strong params can also be used to protect a GET request. Why would you ever want to do that? I'll get to that in a minute. First, let's look at the typical case for strong params.</p>\n<h2 class=\"markdown-subtitle\" id=\"typical-case-post\" style=\"position:relative;\"><a href=\"#typical-case-post\" aria-label=\"typical case post permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Typical Case: POST</h2>\n<p class=\"markdown-para\">Given an HTML form such as:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"html\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">form</span><span class=\"mtk1\"> </span><span class=\"mtk5\">action</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;/person&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">input</span><span class=\"mtk1\"> </span><span class=\"mtk5\">type</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;text&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">name</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;person[name]&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">id</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;person_name&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">input</span><span class=\"mtk1\"> </span><span class=\"mtk5\">type</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;text&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">name</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;person[email]&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">id</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;person_email&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">button</span><span class=\"mtk1\"> </span><span class=\"mtk5\">type</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;submit&quot;</span><span class=\"mtk1\">&gt;Create&lt;/</span><span class=\"mtk7\">button</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk7\">form</span><span class=\"mtk1\">&gt;</span></span></span></code></pre>\n<p class=\"markdown-para\">When the user fills out this form and clicks submit button, it will invoke a <code>POST</code> http action to the <code>/person</code> endpoint, with the following parameters:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;person&quot;</span><span class=\"mtk1\">=&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk6\">&quot;name&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;fred&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk6\">&quot;email&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;fred@example.com&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p class=\"markdown-para\">The corresponding <code>PersonController#create</code> method is responsible for creating a new <code>Person</code> model with the <code>name</code> and <code>email</code> properties populated and saving to the database. A naive implementation would look like:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">PeopleController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">create</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">Person</span><span class=\"mtk1\">.</span><span class=\"mtk5\">create</span><span class=\"mtk1\">(params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">But what if a sneaky user modifies the form or uses a REST client to submit an additional parameter that happens to be used internally, but is not intended to be set by a user such as <code>is_admin</code>, for example:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;person&quot;</span><span class=\"mtk1\">=&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk6\">&quot;name&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;fred&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk6\">&quot;email&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;fred@example.com&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">      </span><span class=\"mtk6\">&quot;is_admin&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;true&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p class=\"markdown-para\">The Rails solution is to use strong parameters to only allow the <code>name</code> and <code>email</code> properties of the form to be saved, rather than passing the entire user generated <code>params</code> to the model create method:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">PeopleController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">create</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">Person</span><span class=\"mtk1\">.</span><span class=\"mtk5\">create</span><span class=\"mtk1\">(person_params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">private</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">person_params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:person</span><span class=\"mtk1\">).</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:name</span><span class=\"mtk1\">, </span><span class=\"mtk4\">:email</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">Now, any additional parameters submitted to the <code>/person</code> endpoint will be discarded when <code>Person.create</code> is called because the <code>person_params</code> method only allows <code>name</code> and <code>email</code>.</p>\n<h2 class=\"markdown-subtitle\" id=\"unusual-case-get\" style=\"position:relative;\"><a href=\"#unusual-case-get\" aria-label=\"unusual case get permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unusual Case: GET</h2>\n<p class=\"markdown-para\">Consider another case where strong params could be useful. Suppose your application exposes a <code>GET /search?q=something</code> endpoint, but behind the scenes, the actual search action is delegated to a third party service.</p>\n<p class=\"markdown-para\">The search form accepts a search term from the user named <code>q</code>. Since this is a query and doesn't modify any state, the <code>GET</code> method is used.</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"html\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;</span><span class=\"mtk7\">form</span><span class=\"mtk1\"> </span><span class=\"mtk5\">action</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;/search&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">method</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;get&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">input</span><span class=\"mtk1\"> </span><span class=\"mtk5\">type</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;text&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk5\">name</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;q&quot;</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  &lt;</span><span class=\"mtk7\">button</span><span class=\"mtk1\">&gt;Search&lt;/</span><span class=\"mtk7\">button</span><span class=\"mtk1\">&gt;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">&lt;/</span><span class=\"mtk7\">form</span><span class=\"mtk1\">&gt;</span></span></span></code></pre>\n<p class=\"markdown-para\">The search action is handled by the search controller, which passes on the params given to it to the third party search service to perform the actual search:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"6\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">SearchController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">search</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">ThirdPartySearchService</span><span class=\"mtk1\">.</span><span class=\"mtk5\">call</span><span class=\"mtk1\">(params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">Where the incoming <code>params</code> look like this:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"7\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;q&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;something the user typed into the form&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p class=\"markdown-para\">Since <code>params</code> comes from the user, it would be useful to restrict the fields that get sent to the third party search service to only the expected fields. In this simple example there's only one expected field <code>q</code>.</p>\n<p class=\"markdown-para\">This sounds like a job for strong parameters! But recall the typical example is for protecting a model:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"8\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">PeopleController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">create</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">Person</span><span class=\"mtk1\">.</span><span class=\"mtk5\">create</span><span class=\"mtk1\">(person_params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">private</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">person_params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:person</span><span class=\"mtk1\">).</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:name</span><span class=\"mtk1\">, </span><span class=\"mtk4\">:email</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">This doesn't seem to be a good fit for a controller handling a <code>GET</code> request because the search controller is not creating or updating a model. Specifically, this line seems like a magic incantation:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"9\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:person</span><span class=\"mtk1\">).</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:name</span><span class=\"mtk1\">, </span><span class=\"mtk4\">:email</span><span class=\"mtk1\">)</span></span></span></code></pre>\n<p class=\"markdown-para\">Here we get to the point where as a newcomer to Rails, it's very easy to copy/paste these seemingly magical incantations and as long as your usage is the same as the typical case, it will work just fine. However, sometimes your use case may be a little different, and the copy/paste no longer works. In this case, it requires digging in a little to understand what's going on \"under the hood\" so to speak.</p>\n<h2 class=\"markdown-subtitle\" id=\"tldr\" style=\"position:relative;\"><a href=\"#tldr\" aria-label=\"tldr permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TL;DR</h2>\n<p class=\"markdown-para\">For those that just want the solution real quick, here it is - simply call <code>permit</code> on the params with the single required field:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"10\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">SearchController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">search</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">ThirdPartySearchService</span><span class=\"mtk1\">.</span><span class=\"mtk5\">call</span><span class=\"mtk1\">(search_params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">search_params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    params.</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:q</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<p class=\"markdown-para\">To understand why this works, read on...</p>\n<h2 class=\"markdown-subtitle\" id=\"deeper-explanation\" style=\"position:relative;\"><a href=\"#deeper-explanation\" aria-label=\"deeper explanation permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deeper Explanation</h2>\n<p class=\"markdown-para\">To make strong parameters work for the search controller, we need to understand what <code>params</code> is. It appears to be a hash of inputs to the controller, that come from either an HTML form, url, or query parameters.</p>\n<p class=\"markdown-para\">However, it's actually a method that returns an instance of <a href=\"https://api.rubyonrails.org/classes/ActionController/Parameters.html\" class=\"markdown-link\">ActionController::Parameters</a>. This instance is initialized with a hash of the input parameters. It also has methods like <code>require</code> and <code>permit</code> which return new instances of <code>ActionController::Parameters</code> so that's why they can be chained together like <code>params.require(:something).permit(:somefield, :otherfield)</code>.</p>\n<h3 class=\"markdown-sub-subtitle\" id=\"require\" style=\"position:relative;\"><a href=\"#require\" aria-label=\"require permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>require</h3>\n<p class=\"markdown-para\">Looking at the api docs for the <a href=\"https://api.rubyonrails.org/classes/ActionController/Parameters.html#method-i-require\" class=\"markdown-link\">require</a> method, it accepts a key, and returns the value from the hash if the key exists, otherwise it raises <code>ActionController::ParameterMissing</code>. If the value happens to be a hash, then it returns a new instance of <code>ActionController::Parameters</code> initialized with the value. This means that given input parameters to a controller such as:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"11\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;a&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;some value&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;b&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;something else&quot;</span><span class=\"mtk1\">,</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">&quot;c&quot;</span><span class=\"mtk1\">=&gt;{</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk6\">&quot;d&quot;</span><span class=\"mtk1\">=&gt;</span><span class=\"mtk6\">&quot;in a hash&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">}</span></span></span></code></pre>\n<p class=\"markdown-para\">The following could be run in the controller:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"12\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:a</span><span class=\"mtk1\">)  </span><span class=\"mtk3\"># &quot;some value&quot;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:x</span><span class=\"mtk1\">)  </span><span class=\"mtk3\"># *** ActionController::ParameterMissing Exception: param is missing or the value is empty: x</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">params.</span><span class=\"mtk5\">require</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:c</span><span class=\"mtk1\">)  </span><span class=\"mtk3\"># &lt;ActionController::Parameters {&quot;d&quot;=&gt;&quot;in a hash&quot;} permitted: false&gt;</span></span></span></code></pre>\n<h3 class=\"markdown-sub-subtitle\" id=\"permit\" style=\"position:relative;\"><a href=\"#permit\" aria-label=\"permit permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>permit</h3>\n<p class=\"markdown-para\">Looking at the api docs for the <a href=\"https://api.rubyonrails.org/classes/ActionController/Parameters.html#method-i-permit\" class=\"markdown-link\">permit</a> method, it accepts a list of filters, and returns a new instance of <code>ActionController::Parameters</code> containing only fields that were specified in the filters. Carrying on with the a,b,c hash example:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"13\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk3\"># returns new instance of params with ONLY the `b` field</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">params.</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:b</span><span class=\"mtk1\">)  </span><span class=\"mtk3\"># &lt;ActionController::Parameters {&quot;b&quot;=&gt;&quot;something else&quot;} permitted: true&gt;</span></span></span></code></pre>\n<p class=\"markdown-para\">Notice that <code>ActionController::Parameters</code> is not tied to a model, it simply operates on a hash. This is why it can be used in any controller, even when not dealing with a model. Also, there's no rule that says you first have to call <code>require</code>, and then chain with <code>permit</code>. You're free to use any combination of these as it suits the use case.</p>\n<h3 class=\"markdown-sub-subtitle\" id=\"solution-explained\" style=\"position:relative;\"><a href=\"#solution-explained\" aria-label=\"solution explained permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution Explained</h3>\n<p class=\"markdown-para\">Now getting back to the search controller, in this case, there are no required fields (let's assume the service will do something reasonable like returning a default set of results when not given a query). The only requirement is that the controller should only pass the <code>q</code> field on to the service and nothing else. This is why it calls the <code>permit</code> method on params, specifying the <code>q</code> field, and then passes the resulting new params object to the third party service:</p>\n<pre class=\"grvsc-container gatsby-highlight monokai\" data-language=\"ruby\" data-index=\"14\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">class</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtku\">SearchController</span><span class=\"mtk5 mtki mtku\"> &lt; ActionController::Base</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">search</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk9 mtki\">ThirdPartySearchService</span><span class=\"mtk1\">.</span><span class=\"mtk5\">call</span><span class=\"mtk1\">(search_params)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5\">search_params</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    params.</span><span class=\"mtk5\">permit</span><span class=\"mtk1\">(</span><span class=\"mtk4\">:q</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk7\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk7\">end</span></span></span></code></pre>\n<h2 class=\"markdown-subtitle\" id=\"conclusion\" style=\"position:relative;\"><a href=\"#conclusion\" aria-label=\"conclusion permalink\" class=\"markdown-header-link before\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p class=\"markdown-para\">This post has covered the typical use case for strong parameters in Rails and how it can also be used for a non typical case of an http GET request. It also took a deeper dive into some seemingly Rails \"magic\", to explain some methods of controller parameters.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai {\n    background-color: #272822;\n    color: #f8f8f2;\n  }\n  .monokai .mtki { font-style: italic; }\n  .monokai .mtku {\n    text-decoration: underline;\n    text-underline-position: under;\n  }\n  .monokai .mtk1 { color: #F8F8F2; }\n  .monokai .mtk7 { color: #F92672; }\n  .monokai .mtk5 { color: #A6E22E; }\n  .monokai .mtk6 { color: #E6DB74; }\n  .monokai .mtk9 { color: #66D9EF; }\n  .monokai .mtk4 { color: #AE81FF; }\n  .monokai .mtk3 { color: #75715E; }\n  .monokai .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","timeToRead":5,"tableOfContents":"<ul>\n<li>\n<p><a href=\"#typical-case-post\">Typical Case: POST</a></p>\n</li>\n<li>\n<p><a href=\"#unusual-case-get\">Unusual Case: GET</a></p>\n</li>\n<li>\n<p><a href=\"#tldr\">TL;DR</a></p>\n</li>\n<li>\n<p><a href=\"#deeper-explanation\">Deeper Explanation</a></p>\n<ul>\n<li><a href=\"#require\">require</a></li>\n<li><a href=\"#permit\">permit</a></li>\n<li><a href=\"#solution-explained\">Solution Explained</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#conclusion\">Conclusion</a></p>\n</li>\n</ul>","frontmatter":{"title":"Rails Strong Params for GET Request","date":"03 Oct 2021","description":"Learn how to use Rails strong parameters with an HTTP GET request.","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/30de304c73a206886f15aeaf89655663/fc2d4/strong-params-sigmund-f0dJjQMhfXo-unsplash.jpg","srcSet":"/static/30de304c73a206886f15aeaf89655663/b834a/strong-params-sigmund-f0dJjQMhfXo-unsplash.jpg 225w,\n/static/30de304c73a206886f15aeaf89655663/21c52/strong-params-sigmund-f0dJjQMhfXo-unsplash.jpg 450w,\n/static/30de304c73a206886f15aeaf89655663/fc2d4/strong-params-sigmund-f0dJjQMhfXo-unsplash.jpg 900w","sizes":"(min-width: 900px) 900px, 100vw"},"sources":[{"srcSet":"/static/30de304c73a206886f15aeaf89655663/71a10/strong-params-sigmund-f0dJjQMhfXo-unsplash.webp 225w,\n/static/30de304c73a206886f15aeaf89655663/901f1/strong-params-sigmund-f0dJjQMhfXo-unsplash.webp 450w,\n/static/30de304c73a206886f15aeaf89655663/4ffff/strong-params-sigmund-f0dJjQMhfXo-unsplash.webp 900w","type":"image/webp","sizes":"(min-width: 900px) 900px, 100vw"}]},"width":900,"height":600}}}},"fields":{"slug":"/blog/rails-strong-params-get/"}},"relatedP":{"edges":[{"node":{"id":"46775b70-43f2-584d-8c65-327ac46ebbd7","frontmatter":{"title":"Dockerize a Rails Application for Development","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#d8c8d8","images":{"fallback":{"src":"/static/3281f20a27a3ba24dcc1ca78c639c25d/26528/docker-rails-shipping-containers.jpg","srcSet":"/static/3281f20a27a3ba24dcc1ca78c639c25d/26528/docker-rails-shipping-containers.jpg 300w,\n/static/3281f20a27a3ba24dcc1ca78c639c25d/43429/docker-rails-shipping-containers.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/3281f20a27a3ba24dcc1ca78c639c25d/5d6c3/docker-rails-shipping-containers.webp 300w,\n/static/3281f20a27a3ba24dcc1ca78c639c25d/68dbc/docker-rails-shipping-containers.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/dockerize-rails-app-for-dev-debug-and-testing/"}}},{"node":{"id":"848d2c81-d508-5776-ac83-fb1e50ef5848","frontmatter":{"title":"Fix Rails Blocked Host Error with Docker","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#080808","images":{"fallback":{"src":"/static/648daf1a5b7bca42ff3729828586b2dc/26528/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg","srcSet":"/static/648daf1a5b7bca42ff3729828586b2dc/26528/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg 300w,\n/static/648daf1a5b7bca42ff3729828586b2dc/43429/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/648daf1a5b7bca42ff3729828586b2dc/5d6c3/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.webp 300w,\n/static/648daf1a5b7bca42ff3729828586b2dc/68dbc/blocked-host-fix-markus-spiske-KTuHfak_EEk-unsplash.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/rails-blocked-host-docker-fix/"}}},{"node":{"id":"d300ca38-a569-5f95-b2a5-0bf6c30486cc","frontmatter":{"title":"Use UUID for primary key with Rails and Postgres","featuredImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/static/30bb7a61cc87a3edc43f8af6d89fa013/26528/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg","srcSet":"/static/30bb7a61cc87a3edc43f8af6d89fa013/26528/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg 300w,\n/static/30bb7a61cc87a3edc43f8af6d89fa013/43429/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.jpg 600w","sizes":"300px"},"sources":[{"srcSet":"/static/30bb7a61cc87a3edc43f8af6d89fa013/5d6c3/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.webp 300w,\n/static/30bb7a61cc87a3edc43f8af6d89fa013/68dbc/primary-keyflorian-berger-SzG0ncGBOeo-unsplash.webp 600w","type":"image/webp","sizes":"300px"}]},"width":300,"height":170}}}},"fields":{"slug":"/blog/rails-uuid-primary-key-postgres/"}}}]}},"pageContext":{"slug":"/blog/rails-strong-params-get/","relatedPosts":["Fix Rails Blocked Host Error with Docker","Use UUID for primary key with Rails and Postgres","Dockerize a Rails Application for Development"]}},"staticQueryHashes":["163244226"],"slicesMap":{}}